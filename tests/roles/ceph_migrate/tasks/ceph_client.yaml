- name: TMP_CLIENT - Get current mon IP address
  ansible.builtin.set_fact:
    mon_ipaddr: "{{ mon_ip | split(':') | first | ansible.utils.ipaddr }}"
  vars:
    mon_ip: |-
      {% for mon in mon_dump.mons %}
      {%   if mon.name == cur_mon.split('.')[0] %}
      {{ mon.addr }}
      {%   endif %}
      {% endfor %}

- name: TMP_CLIENT - Setup a tmp client ip address on the src node
  when:
    - ceph_client_ip is defined
    - mon_ipaddr | default('')
  become: true
  delegate_to: "{{ cur_mon.split('.')[0] }}.ctlplane"
  block:
    - name: TMP_CLIENT - Patch os-net-config config and setup a tmp client IP
      lineinfile:
        dest: "{{ os_net_conf_path }}"
        insertafter: "{{ ceph_storage_net_prefix }}"
        line: "    - ip_netmask: {{ ceph_client_ip }}/24"
        backup: yes

    - name: TMP_CLIENT - Refresh os-net-config
      ansible.builtin.command:
        "os-net-config -c {{ os_net_conf_path }}"

- name: Backup data for client purposes
  delegate_to: "{{ cur_mon.split('.')[0] }}.ctlplane"
  when:
    - ceph_client_ip is defined
    - mon_ipaddr | default('')
  block:
    - name: Ensure backup directory exists
      ansible.builtin.file:
        path: "{{ ceph_config_tmp_client_home }}"
        state: directory
    - name: Check file in the src directory
      ansible.builtin.find:
        paths: /etc/ceph
        patterns: "*"
      register: dir_ceph_files
    - name: Backup ceph client data
      when: dir_ceph_files.files | length > 0
      become: true
      copy:
        remote_src: true
        src: "/etc/ceph/{{ item }}"
        dest: "{{ ceph_config_tmp_client_home }}"
      loop:
        - ceph.conf
        - ceph.client.admin.keyring
